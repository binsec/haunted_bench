* Binsec/Haunted Benchmark
This repository contains the benchmarks used for the experimental
evaluation in the [[https://binsec.github.io/assets/publications/papers/2021-ndss.pdf][Binsec/Hauned paper]].

Binsec/Haunted can be found at https://github.com/binsec/haunted

** Setup python virtual environment (requires python3)
#+BEGIN_SRC bash
virtualenv venv
source venv/bin/activate
pip3 install numpy pandas scipy
#+END_SRC

** Overview of the repository
Tables found in the paper can be reconstructed by running =python3
stats.py=.

Programs to analyze are located in =src/[program_name]=. The directory
contains a script to run the experiments (=expes.py=), and results can
be found in the =stat= subdirectory. Note that to run the script
=expes.py=, you need Binsec/Haunted in you path.

If you only want to run the fastest (/Haunted/) exploration strategy,
just comment the line running /Explicit/ in the script =expes.py=.

** Example: Run litmus tests for PHT and STL
First, go to =src/tests=. Run the experiments with =python3
expes.py=. This will run:
- litmus tests for Spectre-PHT for constant-time without speculation
  (NoSpec in the paper),
- litmus tests for Spectre-STL for constant-time (NoSpec),
- litmus tests for Spectre-PHT with the /Haunted-PHT/ exploration
  strategy,
- litmus tests for Spectre-STL with the /Haunted-STL/ exploration
  strategy.
Finally, it will output a summary of the experiments (x86
instructions, paths, time, violations, timeouts, secure, insecure).

* Litmus tests for Spectre-STL
Similar to [[https://www.paulkocher.com/doc/MicrosoftCompilerSpectreMitigation.html][Paul Kockers's set of litmus tests for Spectre-PHT]], we
propose a new set of litmus tests for Spectre-SLT in
[[src/litmus-stl/programs/spectrev4.c]]


